//! Implementations for Poseidon2 over Goldilocks field of widths 12.

use plonky2::field::goldilocks_field::GoldilocksField;

use super::poseidon2::{Poseidon2, ROUND_F_END, ROUND_P, WIDTH};

impl Poseidon2 for GoldilocksField {
    const MAT_DIAG_M_1: [u64; WIDTH] = [
        0xc3b6c08e23ba9300 + 1,
        0xd84b5de94a324fb6 + 1,
        0x0d0c371c5b35b84f + 1,
        0x7964f570e7188037 + 1,
        0x5daf18bbd996604b + 1,
        0x6743bc47b9595257 + 1,
        0x5528b9362c59bb70 + 1,
        0xac45e25b7127b68b + 1,
        0xa2077d7dfbb606b5 + 1,
        0xf3faac6faee378ae + 1,
        0x0c6388b51545e883 + 1,
        0xd27dbb6944917b60 + 1,
    ];

    const RC: [[u64; WIDTH]; ROUND_F_END] = [
        [
            16155722998241985703,
            16304788901777513344,
            326303055793236234,
            16478478269450032460,
            10021634705548873610,
            16427982278607342947,
            7141098707100445688,
            9870689195068261977,
            8416418478851049929,
            16242863134820941661,
            6327104027136993954,
            15861536960721072209,
        ],
        [
            13511964081854188922,
            17923299753665969517,
            17410946659846792165,
            17119882063229367435,
            1989478460659218702,
            1785743976492065086,
            7429455035932242628,
            5802155804275255146,
            5561057694804616592,
            11857434558348873739,
            9392974546019173419,
            17686663702877428840,
        ],
        [
            9066856129084235275,
            14703992557645950886,
            2130210044088337791,
            5117767698913212382,
            6585036398284031359,
            9772109803644401703,
            4442181697997369571,
            13014675529203448923,
            13159723438668682909,
            2991790588220676448,
            14786609435527731101,
            5157143142952423365,
        ],
        [
            15813058378248894932,
            6552109476996846090,
            6781255692740307952,
            4108620527965729916,
            13063269215505866189,
            13890173299290004282,
            12925902034296305641,
            2390449593627563450,
            2390651405084432573,
            15944112470316353977,
            9885738318329029568,
            14291347636222456766,
        ],
        [
            324584764814764947,
            17495674834715009788,
            3466706872427564069,
            15135342960820255187,
            3722425046750698915,
            1370024870614260207,
            14969088487777856782,
            4555290710615476887,
            13132451349683045122,
            4858010187644483114,
            7661940504763283257,
            17563314901502343445,
        ],
        [
            4720243707463018270,
            5320113885362432763,
            2321252731089087136,
            8809820230662358455,
            15396930838956654214,
            1736798744339400082,
            8626219990323854134,
            2196862942513693048,
            5507486550916994078,
            17633468246758804425,
            6977190147693229114,
            15757098780728622168,
        ],
        [
            604799821141438905,
            13167470287680329483,
            15306419893761931281,
            9523389858052559768,
            2304562164324675923,
            9240656977685287928,
            12978986056929316934,
            686595338136571237,
            16796730299407878971,
            7567197485411889651,
            7308660718050779079,
            17489915453949792135,
        ],
        [
            9961846900353627438,
            14852586624220973458,
            6507489384393482345,
            13748960490556399170,
            9741173841544213844,
            18265677680000088200,
            11876651835124100445,
            7478682368884114454,
            5822492504110044574,
            17025343537201465426,
            2695912960031257660,
            7465453045746224308,
        ],
    ];

    const RC_MID: [u64; ROUND_P] = [
        16423708012065153553,
        3886175644001017152,
        5040624355524016402,
        5550368952742844914,
        14204285289064528661,
        17396556813317674516,
        5265048605511750596,
        11201225350677596329,
        4880096344289762502,
        4437695295717769253,
        11220192019341589189,
        13958283757588342623,
        1649187814127814402,
        11158620744469127486,
        13634724192484518533,
        14651872422273329660,
        14673119752275731511,
        161230517980773333,
        12636037903699324951,
        11743986965929857694,
        7699550709618895610,
        17670647677336229670,
    ];
}

#[cfg(test)]
mod tests {

    use plonky2::field::{
        goldilocks_field::GoldilocksField,
        types::{Field, PrimeField64},
    };

    use super::super::poseidon2::test_helpers::{check_consistency, check_test_vectors};
    type F = GoldilocksField;
    #[test]
    fn test_vectors() {
        // Test inputs are:
        // 1. all zeros
        // 2. range 0..WIDTH
        // 3. all -1's
        // 4. random elements of GoldilocksField.
        // expected output calculated with (modified) hadeshash reference
        // implementation.

        let neg_one: u64 = F::NEG_ONE.to_canonical_u64();

        #[rustfmt::skip]
        let test_vectors12: Vec<([u64; 12], [u64; 12])> = vec![
            ([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ],
             [0x3c18a9786cb0b359, 0xc4055e3364a246c3, 0x7953db0ab48808f4, 0xc71603f33a1144ca,
              0xd7709673896996dc, 0x46a84e87642f44ed, 0xd032648251ee0b3c, 0x1c687363b207df62,
              0xdf8565563e8045fe, 0x40f5b37ff4254dae, 0xd070f637b431067c, 0x1792b1c4342109d7, ]),
            ([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ],
             [0xd64e1e3efc5b8e9e, 0x53666633020aaa47, 0xd40285597c6a8825, 0x613a4f81e81231d2,
              0x414754bfebd051f0, 0xcb1f8980294a023f, 0x6eb2a9e4d54a9d0f, 0x1902bc3af467e056,
              0xf045d5eafdc6021f, 0xe4150f77caaa3be5, 0xc9bfd01d39b50cce, 0x5c0a27fcb0e1459b, ]),
            ([neg_one, neg_one, neg_one, neg_one,
              neg_one, neg_one, neg_one, neg_one,
              neg_one, neg_one, neg_one, neg_one, ],
             [0xbe0085cfc57a8357, 0xd95af71847d05c09, 0xcf55a13d33c1c953, 0x95803a74f4530e82,
              0xfcd99eb30a135df1, 0xe095905e913a3029, 0xde0392461b42919b, 0x7d3260e24e81d031,
              0x10d3d0465d9deaa0, 0xa87571083dfc2a47, 0xe18263681e9958f8, 0xe28e96f1ae5e60d3, ]),
            ([0x8ccbbbea4fe5d2b7, 0xc2af59ee9ec49970, 0x90f7e1a9e658446a, 0xdcc0630a3ab8b1b8,
              0x7ff8256bca20588c, 0x5d99a7ca0c44ecfb, 0x48452b17a70fbee3, 0xeb09d654690b6c88,
              0x4a55d3a39c676a88, 0xc0407a38d2285139, 0xa234bac9356386d1, 0xe1633f2bad98a52f, ],
             [0xa89280105650c4ec, 0xab542d53860d12ed, 0x5704148e9ccab94f, 0xd3a826d4b62da9f5,
              0x8a7a6ca87892574f, 0xc7017e1cad1a674e, 0x1f06668922318e34, 0xa3b203bc8102676f,
              0xfcc781b0ce382bf2, 0x934c69ff3ed14ba5, 0x504688a5996e8f13, 0x401f3f2ed524a2ba, ]),
        ];

        check_test_vectors::<F>(test_vectors12);
    }

    #[test]
    #[ignore]
    fn consistency() {
        check_consistency::<F>();
    }
}
